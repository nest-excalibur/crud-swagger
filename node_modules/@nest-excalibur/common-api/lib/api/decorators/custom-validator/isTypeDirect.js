"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IsTypeDirect = void 0;
const class_validator_1 = require("class-validator");
function IsTypeDirect(typesCollectionStrategies, argsDic, validationOptions) {
    const validationStrategies = Object.keys(typesCollectionStrategies);
    const hasArgsDict = !!(argsDic && Object.keys(argsDic).length > 0);
    const keys = Object.keys(typesCollectionStrategies);
    return (object, propertyName) => {
        class_validator_1.registerDecorator({
            name: 'incorrectType',
            target: object.constructor,
            propertyName,
            options: validationOptions,
            validator: {
                validate(value, args) {
                    return validationStrategies.some((strategy) => {
                        const params = hasArgsDict ? argsDic[strategy] : undefined;
                        const cb = typesCollectionStrategies[strategy];
                        return cb(value, params);
                    });
                },
                defaultMessage(validationArguments) {
                    const lastIndex = keys.length - 1;
                    const lastType = keys[lastIndex];
                    if (keys.length === 0)
                        return `Has to be ${lastType}`;
                    return `Can only be ${keys.join(', ')} or ${lastType}.`;
                }
            }
        });
    };
}
exports.IsTypeDirect = IsTypeDirect;
