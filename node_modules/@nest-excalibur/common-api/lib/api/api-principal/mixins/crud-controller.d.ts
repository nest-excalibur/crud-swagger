import { DtoConfig, DtoConfigInterface } from '../../..';
import { Type } from '@nestjs/common';
import { AbstractController } from './abstract-controller';
import { PipeTransform } from '@nestjs/common/interfaces';
import { CrudMethodsInterface } from '../../interfaces/crud-methods.interface';
export interface CrudMethodPipes {
    overrideDefault?: boolean;
    pipes: (PipeTransform | Function)[];
}
export declare type CrudMethod = keyof (CrudMethodsInterface);
export declare type PipesConfig = Partial<Record<CrudMethod, CrudMethodPipes>>;
export interface CrudOptions {
    useMongo?: boolean;
    dtoConfig: DtoConfigInterface | DtoConfig;
    pipesConfig?: PipesConfig;
    enableErrorMessages?: boolean;
    mapIdWith?: string;
}
export declare type MongooseCrudOptions = Omit<CrudOptions, 'useMongo'>;
export interface PipesFromConfigOptions {
    options: CrudOptions;
    methodName: CrudMethod;
    dto: any;
    isId: boolean;
    enableErrorMessages: boolean;
}
export declare function getPipesFromConfig(pipesFromConfigOptions: PipesFromConfigOptions): (PipeTransform | Function)[];
export declare function CrudController<T>(options: CrudOptions): Type<AbstractController<T>>;
